---
name: R Reverse Dependency Check

on:
  workflow_call:
    inputs:
      revdeps:
        description: 'Reverse dependency to check. Accepts {pak} specifications as JSON string'
        required: false
        type: string
        default: |
          [
            {"pkg": "r2dii.match"},
            {"pkg": "RMI-PACTA/r2dii.match"},
          ]

jobs:
  R-revdep-check:
    runs-on: ubuntu-latest
    name: revdep ${{ matrix.config.pkg }}

    strategy:
      fail-fast: false
      matrix:
        config: ${{ fromJSON(inputs.revdeps) }}

    env:
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
      R_KEEP_PKG_SOURCE: "yes"

    steps:
      - uses: actions/checkout@v4
        with:
          path: "local_package"

      - uses: r-lib/actions/setup-r@v2
        with:
          r-version: devel
          http-user-agent: release
          use-public-rspm: true

      - name: Download and unpack Reverse Dependency
        id: download-revdep
        env:
          REVDEP: ${{ matrix.config.pkg }}
        shell: Rscript {0}
        run: |
          install.packages(
            "pak",
            repos = sprintf(
              "https://r-lib.github.io/p/pak/stable/%s/%s/%s",
              .Platform$pkgType,
              R.Version()$os,
              R.Version()$arch
            )
          )
          dl <- pak::pkg_download(
            pkg = Sys.getenv("REVDEP"),
            dest_dir = "revdep-source",
            dependencies = FALSE
          )
          print(dl[, "package"])
          if ( file.exists(dl[["fulltarget"]][[1L]]) ) {
            target_tar <- dl[["fulltarget"]][[1L]]
          } else if ( file.exists(dl[["fulltarget_tree"]][[1L]]) ) {
            target_tar <- dl[["fulltarget_tree"]][[1L]]
          } else {
            stop("No valid downloads found.")
          }
          untar(
            tarfile = target_tar,
            exdir = dl[["package"]][[1L]]
          )
          cat(
            paste0("revdep-pkg=", dl[["package"]][[1L]], "\n"),
            file = Sys.getenv("GITHUB_OUTPUT"),
            append = TRUE
          )

      - name: inpsect
        run: ls -laR

      - name: Install revdep dependencies
        uses: r-lib/actions/setup-r-dependencies@v2
        with:
          extra-packages: any::rcmdcheck
          needs: check
          upgrade: 'TRUE'
          dependencies: '"all"'
          working-directory: ${{ steps.download-revdep.outputs.revdep-pkg }}
          cache-version: ${{ matrix.config.pkg }}

      - name: Install local HEAD
        id: install-package
        shell: Rscript {0}
        run: |
          dl <- pak::local_install(
            root = "local_package",
            dependencies = TRUE
          )

      - uses: r-lib/actions/check-r-package@v2
        name: Check reverse dependency
        with:
          working-directory: ${{ steps.download-revdep.outputs.revdep-pkg }}
