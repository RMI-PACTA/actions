---
name: R-CMD-check

on:
  workflow_call:
    inputs:
      error-on:
        description: 'Level of R CMD CHECK issue to fail check'
        required: false
        default: '"note"'
        type: string
      r-cmd-check-matrix:
        description: 'json matrix of OS and R versions to test R CMD CHECK'
        required: false
        type: string
        default: |
          [
            {"os": "macOS-latest", "r": "release"},
            {"os": "windows-latest", "r": "release"},
            {"os": "windows-latest", "r": "4.1"},
            {"os": "ubuntu-latest", "r": "release"},
            {"os": "ubuntu-latest", "r": "devel", "http-user-agent": "release"},
            {"os": "ubuntu-latest", "r": "oldrel-1"},
            {"os": "ubuntu-latest", "r": "oldrel-2"},
            {"os": "ubuntu-latest", "r": "oldrel-3"},
            {"os": "ubuntu-latest", "r": "oldrel-4"}
          ]
      extra-repositories:
        description: 'One or more extra CRAN-like repositories to include in the repos global option'
        required: false
        default: ''
        type: string
      prepend-repositories:
        description: 'One or more extra CRAN-like repositories to have priority over the default repos global option'
        required: false
        default: ''
        type: string
      upgrade-packages:
        description: 'passed to setup-r-dependencies upgrade'
        required: false
        default: 'FALSE'
        type: string
      cache-version:
        description: 'passed to setup-r-dependencies cache-version'
        required: false
        default: 1
        type: string

jobs:
  R-CMD-check:
    runs-on: ${{ matrix.config.os }}
    name: ${{ matrix.config.os }} (${{ matrix.config.r }})

    strategy:
      fail-fast: false
      matrix:
        config: ${{ fromJSON(inputs.r-cmd-check-matrix) }}

    env:
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
      R_KEEP_PKG_SOURCE: yes

    steps:
      - uses: actions/checkout@v4

      - uses: r-lib/actions/setup-pandoc@v2

      - uses: r-lib/actions/setup-r@v2
        with:
          r-version: ${{ matrix.config.r }}
          http-user-agent: ${{ matrix.config.http-user-agent }}
          use-public-rspm: true
          extra-repositories: ${{ inputs.extra-repositories }}

      - name: Prepend repositories
        if: ${{ inputs.prepend-repositories }}
        env:
          PREPEND_REPOS: ${{ inputs.prepend-repositories }}
        run: |
          cat <<EOF >> ~/.Rprofile
          local({
            prepend <- unlist(strsplit(x = Sys.getenv("PREPEND_REPOS"), split = ",", fixed = TRUE))
            r <- append(getOption("repos"), prepend, after = 0L)
            options(repos = r)
          })
          EOF
          Rscript -e 'pak::repo_get()'
        shell: bash

      - uses: r-lib/actions/setup-r-dependencies@v2
        with:
          extra-packages: any::rcmdcheck
          needs: check
          upgrade: ${{ inputs.upgrade-packages }}
          cache-version: ${{ inputs.cache-version }}

      - uses: r-lib/actions/check-r-package@v2
        with:
          upload-snapshots: true
          error-on: ${{ inputs.error-on }}
          snapshot-artifact-name: ${{ format('{0}-{1}-r{2}-{3}-testthat-snapshots-{4}-{5}', runner.os, runner.arch, matrix.config.r, matrix.config.id, github.run_id, github.run_attempt) }}
